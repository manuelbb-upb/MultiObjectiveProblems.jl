var documenterSearchIndex = {"docs":
[{"location":"dtlz/#DTLZ-Problems","page":"DTLZ Problems","title":"DTLZ Problems","text":"","category":"section"},{"location":"dtlz/","page":"DTLZ Problems","title":"DTLZ Problems","text":"DTLZ1\nDTLZ2\nDTLZ3\nDTLZ4\nDTLZ5\nDTLZ6\nDTLZ7","category":"page"},{"location":"dtlz/#MultiObjectiveProblems.DTLZ1","page":"DTLZ Problems","title":"MultiObjectiveProblems.DTLZ1","text":"struct DTLZ1 <: DTLZ\n    n_vars :: Int = 10;\n    M :: Int = 6 ;\n    k :: Int = n_vars + 1 - M;\nend\n\nTest problem defined in: Deb et. al - \"Scalable Test Problems for Evolutionary Multiobjective Optimization\".\n\nHas n_vars decision variables and M objectives. The decision vector x is split into two parts: x[1:M-1] and x[M:end]. The latter has length k.\n\nDTLZ1 has an affine-linear global Pareto-optimal front with Σfᵢ=0.5 and      many local minima because a function g akin to Rastrigin's is used.\n\n\n\n\n\n","category":"type"},{"location":"dtlz/#MultiObjectiveProblems.DTLZ2","page":"DTLZ Problems","title":"MultiObjectiveProblems.DTLZ2","text":"struct DTLZ1 <: DTLZ\n    n_vars :: Int = 15;\n    M :: Int = 6 ;\n    k :: Int = n_vars + 1 - M;\nend\n\nTest problem defined in: Deb et. al - \"Scalable Test Problems for Evolutionary Multiobjective Optimization\".\n\nHas n_vars decision variables and M objectives. The decision vector x is split into two parts: x[1:M-1] and x[M:end]. The latter has length k.\n\nDTLZ2 has spherical global Pareto-optimal front with Σfᵢ²=1.\n\n\n\n\n\n","category":"type"},{"location":"dtlz/#MultiObjectiveProblems.DTLZ3","page":"DTLZ Problems","title":"MultiObjectiveProblems.DTLZ3","text":"struct DTLZ1 <: DTLZ\n    n_vars :: Int = 15;\n    M :: Int = 6 ;\n    k :: Int = n_vars + 1 - M;\nend\n\nTest problem defined in: Deb et. al - \"Scalable Test Problems for Evolutionary Multiobjective Optimization\".\n\nHas n_vars decision variables and M objectives. The decision vector x is split into two parts: x[1:M-1] and x[M:end]. The latter has length k.\n\nDTLZ3 has spherical global Pareto-optimal front with Σfᵢ²=1 and      many local minima because a function g akin to Rastrigin's is used.\n\n\n\n\n\n","category":"type"},{"location":"dtlz/#MultiObjectiveProblems.DTLZ4","page":"DTLZ Problems","title":"MultiObjectiveProblems.DTLZ4","text":"struct DTLZ1 <: DTLZ\n    n_vars :: Int = 15;\n    M :: Int = 6 ;\n    k :: Int = n_vars + 1 - M;\nend\n\nTest problem defined in: Deb et. al - \"Scalable Test Problems for Evolutionary Multiobjective Optimization\".\n\nHas n_vars decision variables and M objectives. The decision vector x is split into two parts: x[1:M-1] and x[M:end]. The latter has length k.\n\nDTLZ4 has spherical global Pareto-optimal front with Σfᵢ²=1 and      solutions tend to lie near the f_M-f₁ plane.\n\n\n\n\n\n","category":"type"},{"location":"dtlz/#MultiObjectiveProblems.DTLZ5","page":"DTLZ Problems","title":"MultiObjectiveProblems.DTLZ5","text":"struct DTLZ1 <: DTLZ\n    n_vars :: Int = 15;\n    M :: Int = 6 ;\n    k :: Int = n_vars + 1 - M;\nend\n\nTest problem defined in: Deb et. al - \"Scalable Test Problems for Evolutionary Multiobjective Optimization\".\n\nHas n_vars decision variables and M objectives. The decision vector x is split into two parts: x[1:M-1] and x[M:end]. The latter has length k.\n\nDTLZ5 has spherical Pareto-optimal front that is a curve.\n\n\n\n\n\n","category":"type"},{"location":"dtlz/#MultiObjectiveProblems.DTLZ6","page":"DTLZ Problems","title":"MultiObjectiveProblems.DTLZ6","text":"struct DTLZ1 <: DTLZ\n    n_vars :: Int = 15;\n    M :: Int = 6 ;\n    k :: Int = n_vars + 1 - M;\nend\n\nTest problem defined in: Deb et. al - \"Scalable Test Problems for Evolutionary Multiobjective Optimization\".\n\nHas n_vars decision variables and M objectives. The decision vector x is split into two parts: x[1:M-1] and x[M:end]. The latter has length k.\n\nDTLZ6 has spherical Pareto-optimal front that is a curve and hard to reach.\n\n\n\n\n\n","category":"type"},{"location":"dtlz/#MultiObjectiveProblems.DTLZ7","page":"DTLZ Problems","title":"MultiObjectiveProblems.DTLZ7","text":"struct DTLZ1 <: DTLZ\n    n_vars :: Int = 22;\n    M :: Int = 3 ;\n    k :: Int = n_vars + 1 - M;\nend\n\nTest problem defined in: Deb et. al - \"Scalable Test Problems for Evolutionary Multiobjective Optimization\".\n\nHas n_vars decision variables and M objectives. The decision vector x is split into two parts: x[1:M-1] and x[M:end]. The latter has length k.\n\nDTLZ7 has 2^M-1 disconnected Pareto-optimal regions in search space.     It is similar in construction to the ZDT problems.\n\n\n\n\n\n","category":"type"},{"location":"mht/#MHT-Problems","page":"MHT Problems","title":"MHT Problems","text":"","category":"section"},{"location":"mht/","page":"MHT Problems","title":"MHT Problems","text":"MHT\nMHT1\nMHT2\nMHT3\nMHT4\nMHT5\nMHT6\nMHT7","category":"page"},{"location":"mht/#MultiObjectiveProblems.MHT","page":"MHT Problems","title":"MultiObjectiveProblems.MHT","text":"abstract type MHT <: MOP end\n\nAbstract super type for the set of test problems MHT1-MHT7  (called T1-T7 in the source) from  Thomann, 2019,  “Doctoral Thesis: A Trust Region Approach for  Multi-Objective Heterogenous Optimization”\n\n\n\n\n\n","category":"type"},{"location":"mht/#MultiObjectiveProblems.MHT1","page":"MHT Problems","title":"MultiObjectiveProblems.MHT1","text":"MHT1()\n\nBi-Objective, bi-variate problem MHT1 (T1) from Thomann, 2019,  “Doctoral Thesis: A Trust Region Approach for  Multi-Objective Heterogenous Optimization”.\n\nUnconstrained, convex objectives, convex Pareto Front. f₁ expensive, f₂ cheap.\n\nThe objectives are given as \n\nbeginaligned\n    f_1( mathbfx ) = frac12x_1^2 + x_2^2 - 10 x_1 - 100 \n    f_2( mathbfx ) = x_1^2 + frac12x_2^2 - 10 x_2 - 100\nendaligned\n\n\n\n\n\n","category":"type"},{"location":"mht/#MultiObjectiveProblems.MHT2","page":"MHT Problems","title":"MultiObjectiveProblems.MHT2","text":"MHT2()\n\nBi-Objective, bi-variate problem MHT2 (T2) from Thomann, 2019,  “Doctoral Thesis: A Trust Region Approach for  Multi-Objective Heterogenous Optimization”.\n\nUnconstrained, non-convex objectives, non-convex Pareto Front. f₁ cheap, f₂ expensive.\n\nThe objectives are given as \n\nbeginaligned\n    f_1( mathbfx ) = sin( x₂ ) \n    f_2( mathbfx ) = 1 - \n        exp left( \n            - left( x₁ - frac1sqrt2 right)^2 \n            - left( x₂ - frac1sqrt2 right)^2 \n        right)\nendaligned\n\n\n\n\n\n","category":"type"},{"location":"mht/#MultiObjectiveProblems.MHT3","page":"MHT Problems","title":"MultiObjectiveProblems.MHT3","text":"MHT3()\n\nBi-Objective, bi-variate problem MHT3 (T3) from Thomann, 2019,  “Doctoral Thesis: A Trust Region Approach for  Multi-Objective Heterogenous Optimization”.\n\nBox constraints [-2,2]², convex objectives, convex Pareto Front. f₁ cheap, f₂ expensive.\n\nThe objectives are given as \n\nbeginaligned\n    f_1( mathbfx ) = x₁ + 2 \n    f_2( mathbfx ) = x₁ - 2 + x₂\nendaligned\n\n\n\n\n\n","category":"type"},{"location":"mht/#MultiObjectiveProblems.MHT4","page":"MHT Problems","title":"MultiObjectiveProblems.MHT4","text":"MHT4(n)\n\nBi-Objective, n-variate problem MHT4 (T4) from Thomann, 2019,  “Doctoral Thesis: A Trust Region Approach for  Multi-Objective Heterogenous Optimization”.\n\nBox constraints [-10,10]ⁿ, convex objectives, convex Pareto Front. f₁ expensive, f₂ cheap.\n\nThe objectives are given as \n\nbeginaligned\n    f_1( mathbfx ) = Σ_i=1^n-1 xᵢ² + 2  \n    f_2( mathbfx ) = Σ_i=1^n xᵢ - 2\nendaligned\n\n\n\n\n\n","category":"type"},{"location":"mht/#MultiObjectiveProblems.MHT5","page":"MHT Problems","title":"MultiObjectiveProblems.MHT5","text":"MHT5()\n\nBi-Objective, bi-variate problem MHT5 (T5) from Thomann, 2019,  “Doctoral Thesis: A Trust Region Approach for  Multi-Objective Heterogenous Optimization”.\n\nBox constraints [1e-12,30] × [0,30], convex objectives, convex Pareto Front.\n\nf₁ expensive, f₂ cheap.\n\nThe objectives are given as \n\nbeginaligned\n    f_1( mathbfx ) = x₁ ln( x₁ ) + x₂² \n    f_2( mathbfx ) = x₁² + x₂⁴\nendaligned\n\n\n\n\n\n","category":"type"},{"location":"mht/#MultiObjectiveProblems.MHT6","page":"MHT Problems","title":"MultiObjectiveProblems.MHT6","text":"MHT6()\n\nBi-Objective, bi-variate problem MHT6 (T6) from Thomann, 2019,  “Doctoral Thesis: A Trust Region Approach for  Multi-Objective Heterogenous Optimization”.\n\nBox constraints [1e-12,100]², convex objectives, convex Pareto Front.\n\nf₁ expensive, f₂ cheap.\n\nThe objectives are given as \n\nbeginaligned\n    f_1( mathbfx ) = -ln( x₁ ) - ln( x₂ ) \n    f_2( mathbfx ) = x₁² + x₂\nendaligned\n\n\n\n\n\n","category":"type"},{"location":"mht/#MultiObjectiveProblems.MHT7","page":"MHT Problems","title":"MultiObjectiveProblems.MHT7","text":"MHT7()\n\nBi-Objective, tri-variate problem MHT7 (T7) from Thomann, 2019,  “Doctoral Thesis: A Trust Region Approach for  Multi-Objective Heterogenous Optimization”.\n\nBox constraints [0, 30]^3 convex objectives, convex Pareto Front. 9 f₁ expensive, f₂ cheap.\n\nThe objectives are given as \n\nbeginaligned\n    f_1( mathbfx ) = Σᵢ xᵢ⁴ + Σᵢ xᵢ³\n    f_2( mathbfx ) = Σᵢ xᵢ\nendaligned\n\n\n\n\n\n","category":"type"},{"location":"#MultiObjectiveProblems.jl-Documentation","page":"Home","title":"MultiObjectiveProblems.jl Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package provides some test problems for multiobjective optimization. All problems are considered to be of the form","category":"page"},{"location":"","page":"Home","title":"Home","text":"min_mathbf xin mathcalX\nbeginbmatrix\nf_1(mathbf x) vdots f_k(mathbf x)\nendbmatrix","category":"page"},{"location":"","page":"Home","title":"Home","text":"For now only unconstrained and finitely box constrained problems are provided,  i.e. mathcalX = ℝ^n or  mathcalX = mathbf x in ℝ^n  mathbf l le mathbf x le mathbf u .","category":"page"},{"location":"","page":"Home","title":"Home","text":"Each problem is a subtype of MOP. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"MOP","category":"page"},{"location":"#MultiObjectiveProblems.MOP","page":"Home","title":"MultiObjectiveProblems.MOP","text":"    abstract type MOP end;\n\nA supertype for all problem types.\nEach problem must implement the following methods:\n* `num_vars`\n* `num_objectives`\n* `get_objectives`\n\n\n\n\n\n","category":"type"},{"location":"","page":"Home","title":"Home","text":"Consider for example the canonical 2-Parabola example","category":"page"},{"location":"","page":"Home","title":"Home","text":"min_mathbf xin ℝ^2 \nbeginbmatrix\n(x_1 - 1)^2 + (x_2 - 1)^2 \n(x_1 + 1)^2 + (x_2 + 1)^2\nendbmatrix","category":"page"},{"location":"","page":"Home","title":"Home","text":"It is provided as TwoParabolasUnconstrained. Simply initialize an instance via","category":"page"},{"location":"","page":"Home","title":"Home","text":"mop = TwoParabolasUnconstrained();","category":"page"},{"location":"","page":"Home","title":"Home","text":"This problem has 2 objectives","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> num_objectives( mop ) \n2","category":"page"},{"location":"","page":"Home","title":"Home","text":"We can retrieve them individually as ","category":"page"},{"location":"","page":"Home","title":"Home","text":"f1, f2 = get_objectives(mop);","category":"page"},{"location":"","page":"Home","title":"Home","text":"They take vector valued arguments of type Vector{R} where R<:Real.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Usually, the problem type (TwoParabolasUnconstrained) has a docstring  containing some information:","category":"page"},{"location":"","page":"Home","title":"Home","text":"TwoParabolasUnconstrained","category":"page"},{"location":"#MultiObjectiveProblems.TwoParabolasUnconstrained","page":"Home","title":"MultiObjectiveProblems.TwoParabolasUnconstrained","text":"The canonical two parobola problem with two objectives taking two decision variables.\n\n    min_𝐱  X  \n    beginbmatrix\n    (x₁ - 1)² + (x₂ - 1)² \n    (x₁ + 1)² + (x₂ + 1)²\n    endbmatrix\n\nwhere X = ℝ².\n\n\n\n\n\n","category":"type"},{"location":"zdt/#ZDT-Problems","page":"ZDT Problems","title":"ZDT Problems","text":"","category":"section"},{"location":"zdt/","page":"ZDT Problems","title":"ZDT Problems","text":"ZDT\nZDT1\nZDT2\nZDT3\nZDT4\nZDT6\nget_points","category":"page"},{"location":"zdt/#MultiObjectiveProblems.ZDT","page":"ZDT Problems","title":"MultiObjectiveProblems.ZDT","text":"abstract type ZDT <: MOP end\n\nAbstract super type for the class of ZDT problems as defined in Zitzler et al. - 2000 - Comparison of Multiobjective Evolutionary Algorithms\n\nThese are biobjective problems with a variable number of decision variables n_vars >= 2. They share a common structure\n\nbeginaligned\n    f_1(mathbfx) = f( x_1 ) \n    f_2(mathbfx) = g( x_2  x_n )  h( f_1( x_1 ) g( x_2  x_n ) )\nendaligned\n\n\n\n\n\n","category":"type"},{"location":"zdt/#MultiObjectiveProblems.ZDT1","page":"ZDT Problems","title":"MultiObjectiveProblems.ZDT1","text":"ZDT1( n_vars :: Int )\n\nBi-Objective problem ZDT1 with convex Pareto Front as given in Zitzler et al. - 2000 - Comparison of Multiobjective Evolutionary Algorithms.\n\nThe objectives are given as \n\nbeginaligned\n    f_1( x_1 ) = x_1 \n    f_2( x_1  x_n) = g( x_2  x_n )  h( f_1( x_1 ) g( x_2  x_n ) ) \n    g( x_2  x_n ) = 1 + (9(n-1))  Σ_i x_i \n    h( f1 g ) = 1 - sqrtf_1g\nendaligned\n\n\n\n\n\n","category":"type"},{"location":"zdt/#MultiObjectiveProblems.ZDT2","page":"ZDT Problems","title":"MultiObjectiveProblems.ZDT2","text":"ZDT2( n_vars :: Int )\n\nBi-Objective problem ZDT2 with nonconvex Pareto Front as given in Zitzler et al. - 2000 - Comparison of Multiobjective Evolutionary Algorithms.\n\nThe objectives are given as \n\nbeginaligned\n    f_1( x_1 ) = x_1 \n    f_2( x_1  x_n) = g( x_2  x_n )  h( f_1( x_1 ) g( x_2  x_n ) ) \n    g( x_2  x_n ) = 1 + (9(n-1))  Σ_i x_i \n    h( f1 g ) = 1 - (f_1g)²\nendaligned\n\n\n\n\n\n","category":"type"},{"location":"zdt/#MultiObjectiveProblems.ZDT3","page":"ZDT Problems","title":"MultiObjectiveProblems.ZDT3","text":"ZDT3( n_vars :: Int )\n\nBi-Objective problem ZDT3 with discrete Pareto Front as given in Zitzler et al. - 2000 - Comparison of Multiobjective Evolutionary Algorithms.\n\nThe objectives are given as \n\nbeginaligned\n    f_1( x_1 ) = x_1 \n    f_2( x_1  x_n) = g( x_2  x_n )  h( f_1( x_1 ) g( x_2  x_n ) ) \n    g( x_2  x_n ) = 1 + (9(n-1))  Σ_i x_i \n    h( f1 g ) = 1 - sqrtf_1g- (f_1g)sin( 10 π f_1 )\nendaligned\n\n\n\n\n\n","category":"type"},{"location":"zdt/#MultiObjectiveProblems.ZDT4","page":"ZDT Problems","title":"MultiObjectiveProblems.ZDT4","text":"ZDT4( n_vars :: Int )\n\nBi-Objective problem ZDT4 with many local Pareto Fronts as given in Zitzler et al. - 2000 - Comparison of Multiobjective Evolutionary Algorithms.\n\nThe multimodality is due to g being a version of Rastrigin's function.\n\nThe objectives are given as \n\nbeginaligned\n    f_1( x_1 ) = x_1 \n    f_2( x_1  x_n) = g( x_2  x_n )  h( f_1( x_1 ) g( x_2  x_n ) ) \n    g( x_2  x_n ) = 1 + (9(n-1))  Σ_i ( x_i^2 - cos( 4 π x_i ) ) \n    h( f1 g ) = 1 - sqrtf_1g\nendaligned\n\n\n\n\n\n","category":"type"},{"location":"zdt/#MultiObjectiveProblems.ZDT6","page":"ZDT Problems","title":"MultiObjectiveProblems.ZDT6","text":"ZDT6( n_vars :: Int )\n\nBi-Objective problem ZDT6 with biased Pareto Front as given in Zitzler et al. - 2000 - Comparison of Multiobjective Evolutionary Algorithms.\n\nThe objectives are given as \n\nbeginaligned\n    f_1( x_1 ) = 1 - exp(-4 x_1 ) sin^6( 6 π x_1)  \n    f_2( x_1  x_n) = g( x_2  x_n )  h( f_1( x_1 ) g( x_2  x_n ) ) \n    g( x_2  x_n ) = 1 + 9  Σ_i ( x_i  (n-1) )^14 \n    h( f1 g ) = 1 - (f_1g)²\nendaligned\n\n\n\n\n\n","category":"type"},{"location":"zdt/#MultiObjectiveProblems.get_points","page":"ZDT Problems","title":"MultiObjectiveProblems.get_points","text":"get_points( samp_func, N; kwargs... )\n\nSample N points using samp_func::SamplingFunction. Additional kwargs are passed down to the problem-specfic implementations.\n\n\n\n\n\nget_points( point_set, N; kwargs... )\n\nGet all points using point_set::FixedPointSet.\n\n\n\n\n\nget_points( sample_func, zdt, Val(:ParetoSet), N; method = :regular )\n\nReturn a list of points x  ℝⁿ where x₁ =  = xₙ = 0. Methods are :regular or :random.\n\n\n\n\n\n","category":"function"}]
}
